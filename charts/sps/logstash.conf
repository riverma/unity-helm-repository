input {
  redis {
    host => "${REDIS_LOC}"
    # {% if MOZART_REDIS_PASSWORD != "" %}password => "{{ MOZART_REDIS_PASSWORD }}"{% endif %}
    # these settings should match the output of the agent
    data_type => "list"
    key => "logstash"

    # We use the 'msgpack' codec here because we expect to read
    # msgpack events from redis.
    codec => msgpack
  }
}

filter {
  if [resource] in ["worker", "task"] {
    mutate {
      convert => {
        "[event][timestamp]" => "string"
        "[event][local_received]" => "string"
      }

      split => ["[event][timestamp]", "."]
      split => ["[event][local_received]", "."]

      add_field => [ "[event][timestamp_new]" , "%{[event][timestamp][0]}" ]
      add_field => [ "[event][local_received_new]" , "%{[event][local_received][0]}" ]

      remove_field => ["[event][timestamp]", "[event][local_received]"]
    }

    mutate {
      rename => { "[event][timestamp_new]" => "timestamp" }
      rename => { "[event][local_received_new]" => "local_received" }
    }
  }
}

output {
  #stdout { codec => rubydebug }

  if [resource] == "job" {
      opensearch {        
            hosts  => ["${ELASTIC_URL}"]     
            auth_type => {            
                type => "basic"           
                user => "unitymaster"           
                password => "Un1typa$$word"           
            }             
            index => "job_status-current"
            document_id => "%{payload_id}"
            template => "/usr/share/logstash/job_status.template.json"
            template_name => "job_status"       
     }  
#     elasticsearch {
#       hosts => ["${ELASTIC_URL}"]
#       user => "unitymaster"
#       password => "Un1typa$$word"
#       ssl_certificate_verification => false
#       index => "job_status-current"
#       document_id => "%{payload_id}"
#       template => "/usr/share/logstash/job_status.template.json"
#       template_name => "job_status"
#     }
  } else if [resource] == "worker" {
        opensearch {        
              hosts  => ["${ELASTIC_URL}"]     
              auth_type => {            
                  type => "basic"           
                  user => "unitymaster"           
                  password => "Un1typa$$word"           
              }             
      index => "worker_status-current"
      document_id => "%{celery_hostname}"
      template => "/usr/share/logstash/worker_status.template.json"
      template_name => "worker_status" 
       }  
#     elasticsearch {
#       hosts => ["${ELASTIC_URL}"]
#       user => "unitymaster"
#       password => "Un1typa$$word"
#       ssl_certificate_verification => false
#       index => "worker_status-current"
#       document_id => "%{celery_hostname}"
#       template => "/usr/share/logstash/worker_status.template.json"
#       template_name => "worker_status"
#     }
  } else if [resource] == "task" {
        opensearch {        
              hosts  => ["${ELASTIC_URL}"]     
              auth_type => {            
                  type => "basic"           
                  user => "unitymaster"           
                  password => "Un1typa$$word"           
              }             
      index => "task_status-current"
      document_id => "%{uuid}"
      template => "/usr/share/logstash/task_status.template.json"
      template_name => "task_status"  
       }  
#     elasticsearch {
#       hosts => ["${ELASTIC_URL}"]
#       user => "unitymaster"
#       password => "Un1typa$$word"
#       ssl_certificate_verification => false
#       index => "task_status-current"
#       document_id => "%{uuid}"
#       template => "/usr/share/logstash/task_status.template.json"
#       template_name => "task_status"
#     }
  } else if [resource] == "event" {
        opensearch {        
              hosts  => ["${ELASTIC_URL}"]     
              auth_type => {            
                  type => "basic"           
                  user => "unitymaster"           
                  password => "Un1typa$$word"           
              }             
      index => "event_status-current"
      document_id => "%{uuid}"
      template => "/usr/share/logstash/event_status.template.json"
      template_name => "event_status"   
       }  
#     elasticsearch {
#       hosts => ["${ELASTIC_URL}"]
#       user => "unitymaster"
#       password => "Un1typa$$word"
#       ssl_certificate_verification => false
#       index => "event_status-current"
#       document_id => "%{uuid}"
#       template => "/usr/share/logstash/event_status.template.json"
#       template_name => "event_status"
#     }
  } else {}
}
